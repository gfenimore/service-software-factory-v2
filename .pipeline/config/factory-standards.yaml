# Progressive Factory Standards Configuration
# Version: 1.0
# Purpose: Define progressive standards for each line in the three-line factory
# Inheritance: Each line extends the previous, adding stricter standards

standards:
  # ============================================
  # CONCEPT LINE - Fast validation, loose standards
  # ============================================
  concept:
    description: "Creative exploration with minimal constraints"
    
    typescript:
      strict: false
      noImplicitAny: false
      allowJs: true
      skipLibCheck: true
      allowUnreachableCode: true
      allowUnusedLabels: true
      noUnusedLocals: false
      noUnusedParameters: false
      # Special concept allowances
      allows_any: true
      allows_console: true
      allows_todo_comments: true
    
    testing:
      required: false
      smoke_tests_only: true
      coverage:
        enabled: false
      test_patterns:
        - "*.smoke.test.ts"
        - "*.concept.test.ts"
    
    components:
      patterns: 
        - "functional"
        - "class-based"
        - "mock-components"
      state_management:
        - "useState"
        - "local-state"
        - "mock-data"
      styling:
        - "inline-styles"
        - "tailwind-classes"
        - "css-modules"
    
    validation:
      level: "ui-only"
      library: "html5"
      runtime_validation: false
      schema_enforcement: false
    
    api:
      pattern: "mock"
      endpoints: "hardcoded"
      data: "static-json"
      errors: "console-only"
    
    security:
      enabled: false
      notes: "Security deferred to prototype"
    
    performance:
      monitoring: false
      optimization: false
      lazy_loading: false
    
    documentation:
      required: false
      level: "comments-only"
      format: "inline"
    
    quality_gates:
      - "Compiles without errors"
      - "Basic UI renders"
      - "User can interact with mocks"
      - "Business flow demonstrated"

  # ============================================
  # PROTOTYPE LINE - Prove it works, medium standards
  # ============================================
  prototype:
    extends: concept
    description: "Technical feasibility with real connections"
    
    typescript:
      strict: true
      noImplicitAny: true
      strictNullChecks: true
      strictFunctionTypes: true
      strictBindCallApply: true
      noUnusedLocals: true
      noUnusedParameters: true
      # Prototype restrictions
      allows_any: false
      allows_console: "warn"
      allows_todo_comments: true
    
    testing:
      required: true
      unit_tests: true
      integration_tests: basic
      coverage:
        enabled: true
        statements: 60
        branches: 50
        functions: 60
        lines: 60
      test_patterns:
        - "*.test.ts"
        - "*.spec.ts"
    
    components:
      patterns:
        - "functional"
        - "container-presentational"
      state_management:
        - "context-api"
        - "basic-hooks"
      styling:
        - "css-modules"
        - "styled-components"
      accessibility:
        - "aria-labels"
        - "keyboard-navigation"
        - "focus-management"
    
    validation:
      level: "client-server"
      library: "zod"
      runtime_validation: true
      schema_enforcement: true
      error_handling: "basic"
    
    api:
      pattern: "rest"
      endpoints: "real"
      data: "database"
      validation: "zod"
      errors: "http-status-codes"
      authentication: "required"
      authorization: "basic-roles"
    
    security:
      enabled: true
      authentication: "jwt"
      authorization: "role-based"
      input_sanitization: true
      sql_injection_prevention: true
      xss_prevention: true
      single_tenant: true
    
    performance:
      monitoring: "basic"
      optimization: "lazy-loading"
      code_splitting: true
      bundle_size_limit: "500kb"
    
    documentation:
      required: true
      level: "jsdoc"
      format: "inline"
      api_docs: "basic"
    
    database:
      migrations: true
      rls: "single-tenant"
      indexes: "basic"
      constraints: "foreign-keys"
    
    quality_gates:
      - "TypeScript strict mode passes"
      - "60% test coverage achieved"
      - "All API endpoints functional"
      - "Basic error handling in place"
      - "Authentication working"
      - "Database queries optimized"

  # ============================================
  # PRODUCTION LINE - Ship with confidence, strict standards
  # ============================================
  production:
    extends: prototype
    description: "Enterprise-ready with full standards"
    
    typescript:
      strict: true
      noImplicitAny: true
      strictNullChecks: true
      strictFunctionTypes: true
      strictPropertyInitialization: true
      noImplicitThis: true
      noImplicitReturns: true
      noFallthroughCasesInSwitch: true
      noUncheckedIndexedAccess: true
      exactOptionalPropertyTypes: true
      # Production restrictions
      allows_any: "error"
      allows_console: "error"
      allows_todo_comments: "error"
    
    testing:
      required: true
      unit_tests: true
      integration_tests: true
      e2e_tests: true
      coverage:
        enabled: true
        statements: 80
        branches: 75
        functions: 80
        lines: 80
        critical_paths: 95
      test_patterns:
        - "*.test.ts"
        - "*.spec.ts"
        - "*.e2e.ts"
      performance_tests: true
      security_tests: true
      load_tests: true
    
    components:
      patterns:
        - "functional"
        - "container-presentational"
        - "compound-components"
      state_management:
        - "context-api"
        - "redux-toolkit"
        - "state-machines"
      styling:
        - "css-modules"
        - "styled-components"
        - "css-in-js"
      accessibility:
        - "wcag-2.1-aa"
        - "screen-reader-support"
        - "keyboard-complete"
        - "focus-trapping"
      error_boundaries: "required"
      suspense_boundaries: "required"
    
    validation:
      level: "multi-layer"
      library: "zod"
      runtime_validation: true
      schema_enforcement: true
      error_handling: "comprehensive"
      retry_logic: true
      circuit_breakers: true
    
    api:
      pattern: "rest"
      endpoints: "versioned"
      data: "optimized"
      validation: "multi-layer"
      errors: "detailed"
      authentication: "mfa-capable"
      authorization: "fine-grained"
      rate_limiting:
        enabled: true
        anonymous: "10/min"
        authenticated: "100/min"
        premium: "1000/min"
      caching:
        - "redis"
        - "cdn"
        - "browser"
    
    security:
      enabled: true
      owasp_top_10: "enforced"
      authentication: "mfa"
      authorization: "attribute-based"
      encryption:
        at_rest: true
        in_transit: true
      input_sanitization: "comprehensive"
      sql_injection_prevention: "parameterized"
      xss_prevention: "csp-enabled"
      csrf_protection: true
      multi_tenant: true
      audit_logging: true
      penetration_tested: true
    
    performance:
      monitoring: "full"
      apm: "datadog"
      optimization: "aggressive"
      code_splitting: "route-based"
      bundle_size_limit: "200kb"
      lighthouse_score: 90
      fcp: "<1.5s"
      lcp: "<2.5s"
      cls: "<0.1"
      fid: "<100ms"
      ttfb: "<600ms"
    
    documentation:
      required: true
      level: "tsdoc"
      format: "comprehensive"
      api_docs: "openapi"
      user_guides: true
      runbooks: true
      architecture_docs: true
    
    database:
      migrations: "versioned"
      rls: "multi-tenant"
      indexes: "optimized"
      constraints: "comprehensive"
      partitioning: "if-needed"
      backup_strategy: true
      disaster_recovery: true
    
    monitoring:
      enabled: true
      metrics:
        - "business"
        - "technical"
        - "security"
      logging:
        level: "structured"
        aggregation: "centralized"
        retention: "30-days"
      alerting:
        - "error-rates"
        - "performance"
        - "security"
        - "business-kpis"
      dashboards:
        - "operational"
        - "business"
        - "security"
    
    quality_gates:
      - "TypeScript strict mode with all flags"
      - "80% test coverage (95% critical paths)"
      - "Security scan passed"
      - "Performance benchmarks met"
      - "Accessibility WCAG 2.1 AA compliant"
      - "Load testing passed (1000 concurrent users)"
      - "API documentation complete"
      - "Monitoring and alerting configured"
      - "Multi-tenant isolation verified"
      - "Zero critical vulnerabilities"

# ============================================
# Line Promotion Rules
# ============================================
promotion_rules:
  concept_to_prototype:
    required_gates:
      - "Business stakeholder approval"
      - "UX validation complete"
      - "Mock data structure defined"
      - "No blocking questions"
    automated_checks:
      - "npm run concept:validate"
    manual_review: true
    
  prototype_to_production:
    required_gates:
      - "All integrations tested"
      - "60% test coverage achieved"
      - "Error handling implemented"
      - "Performance acceptable"
    automated_checks:
      - "npm run prototype:validate"
      - "npm run test:coverage"
    manual_review: true
    security_review: false
    
  production_to_graduated:
    required_gates:
      - "80% test coverage achieved"
      - "Security scan passed"
      - "Performance benchmarks met"
      - "Documentation complete"
      - "Monitoring configured"
    automated_checks:
      - "npm run production:validate"
      - "npm run security:scan"
      - "npm run performance:test"
    manual_review: true
    security_review: true
    architecture_review: true

# ============================================
# Enforcement Configuration
# ============================================
enforcement:
  pre_commit:
    enabled: true
    check_line_standards: true
    block_on_violation: true
    
  ci_pipeline:
    enabled: true
    parallel_checks: true
    fail_fast: false
    
  progressive_mode:
    enabled: true
    allow_temporary_exemptions: true
    exemption_max_days: 7
    
  reporting:
    enabled: true
    dashboard: "standards-dashboard"
    weekly_summary: true
    violation_trends: true